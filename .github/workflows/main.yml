name: CI Tests

on: [pull_request,push]

jobs:
  Ubuntu:
    runs-on: ubuntu-${{ matrix.os_ver }}
    name: Ubuntu
    strategy:
      fail-fast: false
      matrix:
        include:
          - os_ver: "24.04"
            QT_VER: "5.15.2"
          - os_ver: "24.04"
            QT_VER: "6.9.1"
          - os_ver: "24.04-arm"
            QT_VER: "6.9.1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-Qt-Cache-${{ matrix.QT_VER }}-${{ matrix.os_ver }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.QT_VER }}
          cache: ${{ steps.cache-qt.outputs.cache-hit }}
          dir: ${{ github.workspace }}/Qt
          archives: qtbase icu

      - name: Install prerequisties
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            libglu1-mesa-dev \
            libxkbcommon-dev \
            libvulkan-dev \
            libgl2ps-dev

      - name: Configuring
        run: |
          mkdir build && cd build
          cmake .. \
            -DBUILD_SHARED_LIBS=ON

      - name: Building
        run: |
          make -j$(nproc) -C build

  MSVC:
    name: MSVC_Qt_${{ matrix.QT_VER }}_${{ matrix.os_ver }}
    runs-on: windows-${{ matrix.os_ver }}
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os_ver: "2025"
            QT_VER: "5.15.2"
            triplet: x64-windows
          - os_ver: "2025"
            QT_VER: "6.9.1"
            triplet: x64-windows
          - os_ver: "11-arm"
            QT_VER: "6.9.1"
            triplet: arm64-windows

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-Qt-Cache-${{ matrix.QT_VER }}-${{ matrix.os_ver }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.QT_VER }}
          cache: ${{ steps.cache-qt.outputs.cache-hit }}
          dir: ${{ github.workspace }}/Qt
          archives: qtbase icu

      - name: Setup NuGet Credentials
        run: |
          & $(vcpkg fetch nuget | select -last 1) sources add `
          -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
          -name "GitHub" `
          -username ${{ github.repository_owner }} `
          -password "${{ secrets.GITHUB_TOKEN }}"

      - name: vcpkg package restore
        run: |
          vcpkg install gl2ps --triplet ${{ matrix.triplet }}

      - name: Configuring
        run: |
          mkdir build; cd build
          cmake .. `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_SHARED_LIBS=ON `
            -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake

      - name: Building
        run: |
          cmake --build build --config Release -- -maxCpuCount

  MinGW-w64:
    runs-on: windows-${{ matrix.os_ver }}
    name: MSYS2 ${{ matrix.msystem }} Qt ${{ matrix.QT_VER }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - msystem: UCRT64
            QT_VER: 5
            os_ver: "2025"
            new_msys2: false
          - msystem: UCRT64
            QT_VER: 6
            os_ver: "2025"
            new_msys2: false
          - msystem: CLANG64
            QT_VER: 5
            os_ver: "2025"
            new_msys2: false
          - msystem: CLANG64
            QT_VER: 6
            os_ver: "2025"
            new_msys2: false
          - msystem: CLANGARM64
            QT_VER: 6
            os_ver: "11-arm"
            new_msys2: true
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MinGW-w64 packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: ${{ matrix.new_msys2 }}
          update: true
          pacboy: >-
            cmake:p
            ninja:p
            cc:p
            qt${{ matrix.QT_VER }}-base:p
            gl2ps:p

      - name: Configuring
        run: |
          mkdir build && cd build
          cmake ..

      - name: Building
        run: |
          cmake --build build

  macos:
    runs-on: macos-latest
    name: macos
    env:
      QT_VERSION: 6.9.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-Qt-Cache-${{ env.QT_VERSION }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          cache: ${{ steps.cache-qt.outputs.cache-hit }}
          dir: ${{ github.workspace }}/Qt
          archives: qtbase icu

      - name: Install prerequisties
        run: |
          brew install gl2ps

      - name: Configuring
        run: |
          mkdir build && cd build
          cmake .. \
            -DBUILD_SHARED_LIBS=ON

      - name: Building
        run: |
          make -j$(sysctl -n hw.logicalcpu) -C build
